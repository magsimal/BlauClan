version: '3.8'
services:
  db:
    image: postgres:13-alpine
    environment:
      POSTGRES_DB: familytree
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    volumes:
      - db-data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 5
    restart: unless-stopped
  backend:
    build: ./backend
    environment:
      DB_NAME: familytree
      DB_USER: postgres
      DB_PASSWORD: postgres
      DB_HOST: db
      PORT: ${BACKEND_PORT:-3009}
      GEONAMES_USER: ${GEONAMES_USER}
      REDIS_URL: redis://cache:6379
    ports:
      - '${BACKEND_PORT:-3009}:${BACKEND_PORT:-3009}'
    depends_on:
      db:
        condition: service_healthy
      cache:
        condition: service_started
    restart: unless-stopped
  frontend:
    build: ./frontend
    environment:
      BACKEND_PORT: ${BACKEND_PORT:-3009}
      RELATIVE_ATTRACTION: ${RELATIVE_ATTRACTION:-0.5}
      SHOW_DELETE_ALL_BUTTON: ${SHOW_DELETE_ALL_BUTTON:-false}
    ports:
      - '8080:80'
    depends_on:
      - backend
    restart: unless-stopped
  cache:
    image: redis:7-alpine
    command: ["redis-server", "--save", "", "--appendonly", "no"]
    restart: unless-stopped
volumes:
  db-data:
